// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Services.Attendance.Infrastructure;

namespace Services.Attendance.Infrastructure.Migrations
{
    [DbContext(typeof(AttendanceDbContext))]
    partial class AttendanceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Services.Attendance.Domain.Entities.CourseAttendance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CourseProgramInfoId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("TimePlaceId")
                        .HasColumnType("uuid");

                    b.Property<int>("WeekNumber")
                        .HasColumnType("integer");

                    b.Property<int>("WeeklyProgramNumber")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CourseProgramInfoId");

                    b.ToTable("CourseAttendances");
                });

            modelBuilder.Entity("Services.Attendance.Domain.Entities.CourseProgramInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("CourseProgramInfos");
                });

            modelBuilder.Entity("Services.Attendance.Domain.Entities.StudentAttendance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CourseAttendanceId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMarked")
                        .HasColumnType("boolean");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CourseAttendanceId");

                    b.ToTable("StudentAttendances");
                });

            modelBuilder.Entity("Services.Attendance.Domain.Entities.CourseAttendance", b =>
                {
                    b.HasOne("Services.Attendance.Domain.Entities.CourseProgramInfo", "CourseProgramInfo")
                        .WithMany("CourseAttendances")
                        .HasForeignKey("CourseProgramInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CourseProgramInfo");
                });

            modelBuilder.Entity("Services.Attendance.Domain.Entities.StudentAttendance", b =>
                {
                    b.HasOne("Services.Attendance.Domain.Entities.CourseAttendance", "CourseAttendance")
                        .WithMany("StudentAttendances")
                        .HasForeignKey("CourseAttendanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CourseAttendance");
                });

            modelBuilder.Entity("Services.Attendance.Domain.Entities.CourseAttendance", b =>
                {
                    b.Navigation("StudentAttendances");
                });

            modelBuilder.Entity("Services.Attendance.Domain.Entities.CourseProgramInfo", b =>
                {
                    b.Navigation("CourseAttendances");
                });
#pragma warning restore 612, 618
        }
    }
}
